# Generated by Django 5.2 on 2025-04-24 06:42

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('patients', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='StaffUsers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='CarePlanFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback_on_services', models.TextField()),
                ('provisional_feedback', models.TextField()),
                ('feedback_plan', models.TextField()),
                ('expected_outcome', models.TextField()),
                ('preventive_feedback_aspects', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('patient', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='patients.patient')),
            ],
        ),
        migrations.CreateModel(
            name='InitialAssessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating_title', models.CharField(blank=True, max_length=255, null=True)),
                ('relationship_to_feedback', models.CharField(blank=True, max_length=255, null=True)),
                ('feedback_date', models.DateField(blank=True, null=True)),
                ('duration_of_experience', models.TextField(blank=True, null=True)),
                ('present_illness', models.TextField(blank=True, null=True)),
                ('past_illness', models.TextField(blank=True, null=True)),
                ('experience_feedback', models.TextField(blank=True, null=True)),
                ('health_feedback', models.TextField(blank=True, null=True)),
                ('heart_feedback', models.TextField(blank=True, null=True)),
                ('stroke_feedback', models.TextField(blank=True, null=True)),
                ('other_feedback', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('patient', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='patients.patient')),
            ],
        ),
        migrations.CreateModel(
            name='NursingNotes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('patient', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='patients.patient')),
            ],
        ),
        migrations.CreateModel(
            name='PainAssessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pain_intensity', models.IntegerField(choices=[(0, '0'), (1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10')], default=0)),
                ('location_of_service', models.CharField(blank=True, max_length=255, null=True)),
                ('quality_of_service', models.CharField(blank=True, choices=[('constant', 'Constant Feedback'), ('intermittent', 'Intermittent Feedback')], max_length=20, null=True)),
                ('character_of_service', models.JSONField(blank=True, null=True)),
                ('factors_affecting_rating', models.TextField(blank=True, null=True)),
                ('factors_improving_experience', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('patient', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pain_assessment', to='patients.patient')),
            ],
        ),
        migrations.CreateModel(
            name='ProgressNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('critical', 'Critical'), ('serious', 'Serious'), ('moderate', 'Moderate'), ('mild', 'Mild'), ('recovered', 'Recovered'), ('stable', 'Stable'), ('deteriorating', 'Deteriorating'), ('improving', 'Improving')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('patient', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='progress_notes', to='patients.patient')),
            ],
        ),
        migrations.CreateModel(
            name='RiskFactor1',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('minor_surgery', models.BooleanField(default=False)),
                ('age_40_to_60_yrs', models.BooleanField(default=False)),
                ('pregnancy_or_post_martum', models.BooleanField(default=False)),
                ('varicose_veins', models.BooleanField(default=False)),
                ('inflammatory_bowel_disease', models.BooleanField(default=False)),
                ('obesity', models.BooleanField(default=False)),
                ('combined_oral', models.BooleanField(default=False)),
                ('contraceptives_or_HRT', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('patient', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='patients.patient')),
            ],
        ),
        migrations.CreateModel(
            name='RiskFactor2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age_over_60_yrs', models.BooleanField(default=False)),
                ('malignancy', models.BooleanField(default=False)),
                ('major_surgery', models.BooleanField(default=False)),
                ('immobilising_plaster_cast', models.BooleanField(default=False)),
                ('medical_or_surgical', models.BooleanField(default=False)),
                ('patients_confined_to', models.BooleanField(default=False)),
                ('bed_72_hrs', models.BooleanField(default=False)),
                ('central_venous_access', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('patient', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='patients.patient')),
            ],
        ),
        migrations.CreateModel(
            name='RiskFactor3',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('history_of_DVT_or_PE', models.BooleanField(default=False)),
                ('myocardial_infarction', models.BooleanField(default=False)),
                ('congestive_heart_failure', models.BooleanField(default=False)),
                ('severe_sepsis_or_infection', models.BooleanField(default=False)),
                ('factor_V_leiden_or_activated', models.BooleanField(default=False)),
                ('protein_C_resistance', models.BooleanField(default=False)),
                ('antithrombin_III_deficiency', models.BooleanField(default=False)),
                ('proteins_C_and_S_deficiency', models.BooleanField(default=False)),
                ('dysfibrinogenemia', models.BooleanField(default=False)),
                ('homocysteinemia', models.BooleanField(default=False)),
                ('prothrombin_mutation_20210A', models.BooleanField(default=False)),
                ('lupus_anticoagulant', models.BooleanField(default=False)),
                ('antiphospholipid_antibodies', models.BooleanField(default=False)),
                ('myeloproliferative_disorders', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('patient', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='patients.patient')),
            ],
        ),
        migrations.CreateModel(
            name='RiskFactor4',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('elective_major_lower', models.BooleanField(default=False)),
                ('extremity', models.BooleanField(default=False)),
                ('arthroplasty', models.BooleanField(default=False)),
                ('stroke_feedbackhip_pelvis_or_leg_fracture', models.BooleanField(default=False)),
                ('stroke', models.BooleanField(default=False)),
                ('multiple_trauma', models.BooleanField(default=False)),
                ('acute_spinal_cord_injury', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('patient', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='patients.patient')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceProcedure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_type', models.CharField(choices=[('vitals', 'Vitals'), ('lab_results', 'Lab Results'), ('imaging', 'Imaging'), ('prescription', 'Prescription'), ('services_procedures', 'Services & Procedures')], max_length=50)),
                ('procedure_name', models.CharField(max_length=100)),
                ('procedure_notes', models.TextField()),
                ('category', models.CharField(blank=True, max_length=255)),
                ('summary', models.TextField(blank=True)),
                ('report', models.FileField(blank=True, null=True, upload_to='reports/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated_at', models.DateTimeField(auto_now=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_procedures', to='patients.patient')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='procedures', to='rec_app.staffusers')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_type', models.CharField(choices=[('vitals', 'Vitals'), ('lab_results', 'Lab Results'), ('imaging', 'Imaging'), ('prescription', 'Prescription'), ('services_procedures', 'Services & Procedures')], max_length=50)),
                ('medication_name', models.CharField(max_length=100)),
                ('dosage', models.CharField(max_length=50)),
                ('duration', models.CharField(max_length=50)),
                ('category', models.CharField(blank=True, max_length=255)),
                ('summary', models.TextField(blank=True)),
                ('report', models.FileField(blank=True, null=True, upload_to='reports/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated_at', models.DateTimeField(auto_now=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prescriptions', to='patients.patient')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prescriptions', to='rec_app.staffusers')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LabResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_type', models.CharField(choices=[('vitals', 'Vitals'), ('lab_results', 'Lab Results'), ('imaging', 'Imaging'), ('prescription', 'Prescription'), ('services_procedures', 'Services & Procedures')], max_length=50)),
                ('title', models.CharField(max_length=255)),
                ('category', models.CharField(blank=True, max_length=255)),
                ('summary', models.TextField(blank=True)),
                ('report', models.FileField(blank=True, null=True, upload_to='reports/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated_at', models.DateTimeField(auto_now=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lab_results', to='patients.patient')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rec_app.staffusers')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Imaging',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_type', models.CharField(choices=[('vitals', 'Vitals'), ('lab_results', 'Lab Results'), ('imaging', 'Imaging'), ('prescription', 'Prescription'), ('services_procedures', 'Services & Procedures')], max_length=50)),
                ('scan_type', models.CharField(max_length=100)),
                ('category', models.CharField(blank=True, max_length=255)),
                ('summary', models.TextField(blank=True)),
                ('report', models.FileField(blank=True, null=True, upload_to='reports/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated_at', models.DateTimeField(auto_now=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='imaging_records', to='patients.patient')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='imaging', to='rec_app.staffusers')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TreatmentChart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medicine_name', models.CharField(max_length=255)),
                ('hrs_drops_mins', models.CharField(max_length=50)),
                ('dose', models.CharField(max_length=50)),
                ('time', models.TimeField()),
                ('medicine_details', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='treatment_charts', to='patients.patient')),
            ],
        ),
        migrations.CreateModel(
            name='Vitals',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_type', models.CharField(choices=[('vitals', 'Vitals'), ('lab_results', 'Lab Results'), ('imaging', 'Imaging'), ('prescription', 'Prescription'), ('services_procedures', 'Services & Procedures')], max_length=50)),
                ('recorded_by', models.CharField(max_length=255)),
                ('blood_pressure', models.CharField(max_length=50)),
                ('bmi', models.FloatField()),
                ('grbs', models.CharField(max_length=50)),
                ('cvs', models.CharField(max_length=50)),
                ('cns', models.CharField(max_length=50)),
                ('respiratory_rate', models.IntegerField()),
                ('weight', models.FloatField()),
                ('height', models.FloatField()),
                ('category', models.CharField(blank=True, max_length=255)),
                ('summary', models.TextField(blank=True)),
                ('report', models.FileField(blank=True, null=True, upload_to='reports/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated_at', models.DateTimeField(auto_now=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vitals_records', to='patients.patient')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
