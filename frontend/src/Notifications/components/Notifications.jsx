
import React, { useState } from "react";
import { Container, Row, Col, Button, Form, Card } from "react-bootstrap";
import Notificationstyle from "../css/Notiification.module.css";
import { CiSearch } from "react-icons/ci";
import { PiPercent } from "react-icons/pi";
import { AiOutlinePlus } from "react-icons/ai";
import { Icon } from "@iconify/react";
import { MdLocalHospital } from "react-icons/md";

function Notifications() {
  const [activeTab, setActiveTab] = useState("all");
  const [query, setQuery] = useState('');
   const [visibleCount, setVisibleCount] = useState({
      all: 3,
      patients: 3,
      invoices: 3,
      discounts: 3,
      user: 3,
      sales: 3,         
      pharmacy: 3,
      labs: 3,
    });
  const handleTabClick = (tabName) => {
    setActiveTab(tabName);
  };
   const [allnotifications, setNotifications] = useState([
    {
      id: 1,
      category: "patients",
      title: "New Patient Registration",
      description1: "James Wilson (ID: P-10045) has been registered as a new patient.",
      description2:"Assigned to: Dr. Lisa Chen Department: Cardiology.",
      time: "2 minutes ago",
      icon: <AiOutlinePlus className= {Notificationstyle.patients}/>,
      bgColor: "#D5DEF5",
      isRead: false,
    },
    {
      id: 2,
      category: "invoices",
      title: "New Invoice Generated",
      description1: "Invoice #INV-2035-0348 for $1,258.75 has been generated for patient Sarah Johnson.",
      description2:" Generated by: Front Desk Services: Consultation.",
      time: "2 minutes ago",
      icon: <Icon icon="heroicons:currency-dollar-solid" width="32" height="34"   style={{color:" #16A34A"}}  />,
      bgColor: "#D5DEF5",
      isRead: false,
    },
    {
      id: 3,
      category: "discounts",
      title: "Discount Approval Required",
      description1: "Dr. Robert has requested 15% discount for patient Emily Parker (ID: P-7632).",
      description2:" Invoice: #NV-2025-0342 Amount: $425.50.",
      time: "2 minutes ago",
      icon: <PiPercent  className={Notificationstyle.percent}/>,
      bgColor: "",
      isRead: false,
    },
    {
      id: 4,
      category: "pharmacy",
      title: "Pharmacy Sale Completed",
      description1: "Pharmacy sale #Ph-5487 for $175.25 has been completed for patient David Brown. ",
      description2:"Items: 3 medications. Payment: Credit Card.",
      time: "2 minutes ago",
      icon: <MdLocalHospital  className={Notificationstyle.hospital}/>,
      bgColor: "#D5DEF5",
      isRead: false,
    },
    {
      id: 5,
      category: "labs",
      title: "Lab Invoice Generated",
      description1: "Invoice #INV-2035-0348 for $1,258.75 has been generated for patient Sarah Johnson.",
      description2:"Generated by: Lab_1 Services: Lab Tests.",
      time: "2 minutes ago",
      icon: <Icon icon="guidance:medical-laboratory" className={Notificationstyle.labs}  />,
      bgColor: "#D5DEF5",
      isRead: false,
    },
    {
      id: 6,
      category: "pharmacy",
      title: "Pharmacy Sale Completed",
      description1: "Pharmacy sale #Ph-5487 for $175.25 has been completed for patient David Brown. ",
      description2:"Items: 3 medications. Payment: Credit Card.",
      time: "2 minutes ago",
      icon: <MdLocalHospital  className={Notificationstyle.hospital}/>,
      bgColor: "#D5DEF5",
      isRead: false,
    },
    {
      id: 7,
      category: "pharmacy",
      title: "Pharmacy Sale Completed",
      description1: "Pharmacy sale #Ph-5487 for $175.25 has been completed for patient David Brown. ",
      description2:"Items: 3 medications. Payment: Credit Card.",
      time: "2 minutes ago",
      icon: <MdLocalHospital  className={Notificationstyle.hospital}/>,
      bgColor: "#D5DEF5",
      isRead: false,
    },
    {
      id: 7,
      category: "pharmacy",
      title: "Pharmacy Sale Completed",
      description1: "Pharmacy sale #Ph-5487 for $175.25 has been completed for patient David Brown. ",
      description2:"Items: 3 medications. Payment: Credit Card.",
      time: "2 minutes ago",
      icon: <MdLocalHospital  className={Notificationstyle.hospital}/>,
      bgColor: "#D5DEF5",
      isRead: false,
    },
    {
      id: 8,
      category: "pharmacy",
      title: "Pharmacy Sale Completed",
      description1: "Pharmacy sale #Ph-5487 for $175.25 has been completed for patient David Brown. ",
      description2:"Items: 3 medications. Payment: Credit Card.",
      time: "2 minutes ago",
      icon: <MdLocalHospital  className={Notificationstyle.hospital}/>,
      bgColor: "#D5DEF5",
      isRead: false,
    },
    
  ]);
  //for single notification
  const handleNotificationClick = (id) => {
    setNotifications((prevNotifications) =>
      prevNotifications.map((note) =>
        note.id === id ? { ...note, isRead: true, bgColor: "#FFFFFF" } : note
      )
    );
  };
  //for mark all as read
  const markAllAsRead = () => {
    setNotifications((prevNotifications) =>
      prevNotifications.map((note) => ({ ...note, isRead: true, bgColor: "#FFFFFF" }))
    );
  };
    //Load more notifications
    const loadMoreNotifications = () => {
      setVisibleCount((prevCounts) => ({
        ...prevCounts,
        [activeTab]: prevCounts[activeTab] + 3,
      }));
    };

  return (
    <Container>
      <Row>
        <Col>
          <h1 className="text-center text-md-start fs-2">Notifications</h1>
        </Col>
      </Row>
      <div className={Notificationstyle.container}>
      <Row className="g-3">
        {[
          { title: "Total Unread", count: 0 },
          { title: "New Patients Today", count: 8 },
          { title: "Invoices Generated", count: 16 },
          { title: "Pharmacy Sales", count: 16 },
        ].map((item, index) => (
          <Col key={index} xs={12} sm={6} md={4} lg={3}>
            <Card className={Notificationstyle.firstcard}>
              <Card.Body>
                <Card.Subtitle className="mb-3 text-muted">{item.title}</Card.Subtitle>
                <Card.Text className="fw-bold fs-3 ">{item.count}</Card.Text>
                <p>
                  <span className="text-success text-start">+12%</span> &nbsp;from yesterday
                </p>
              </Card.Body>
            </Card>
          </Col>
        ))}
      </Row>
    </div>
    <div className={Notificationstyle.fixedHeader}>
    <Row className="mt-5 mb-5">
        <Col className={`d-flex flex-wrap justify-content-around gap-4 ${Notificationstyle.buttonContainer}`}>
          {[
            { key: "all", label: "All Notifications" },
            { key: "patients", label: "Patients" },
            { key: "invoices", label: "Invoices" },
            { key: "discounts", label: "Discounts" },
            { key: "user", label: "User Preference" },
            { key: "sales", label: "Sales" },
            { key: "pharmacy", label: "Pharmacy" },
            { key: "labs", label: "Labs" },
          ].map((tab) => (
            <Button
              key={tab.key}
              className={Notificationstyle.customButton}
              style={{
                backgroundColor: activeTab === tab.key ? "#002072" : "transparent",
                color: activeTab === tab.key ? "white" : "#808080",
                border: "1px solid #CFDCEB",
              }}
              onClick={() => handleTabClick(tab.key)}
            >
              {tab.label}
            </Button>
          ))}
        </Col>
      </Row>
      <Row className="mb-3">
        <Col>
           <div className={Notificationstyle.searchbar}>
              <label style={{ position: 'relative' }}>
                  <CiSearch className={Notificationstyle.searchicon} />
                  <input
                      value={query}
                      onChange={(e) => setQuery(e.target.value)}
                      placeholder="Search Patients"
                      className={Notificationstyle.searchInput}
                  />
              </label></div>
        </Col>
        <Col xs="auto">     
          <Button variant="light" onClick={markAllAsRead}>Mark all as Read</Button>
        </Col>
      </Row>
      </div>
      {/* Filtered Notifications */}
      <div className={Notificationstyle.notificationList}>
      {allnotifications
        .filter((note) => activeTab === "all" || note.category === activeTab)
        .slice(0, visibleCount[activeTab]) 
        .map((note) => (
          <div
            key={note.id}
            className={`p-4 mb-1  shadow-sm ${Notificationstyle .cards}`}
            style={{ backgroundColor: note.isRead ? "#FFFFFF" : note.bgColor,  }}
            onClick={() => handleNotificationClick(note.id)}
          >
           <Row>
              <Col xs="auto" className={`fs-4 mt-4 ${Notificationstyle.icon}`}>
                {note.icon}
              </Col>
              <Col>
              <div className={`d-flex justify-content-between ${Notificationstyle.titi}`}>
                <h6 className={` ${Notificationstyle.title}`}>{note.title}</h6>
                <div>
                  <small className={`pe-4 ${Notificationstyle.time}`}>{note.time}</small>
                  {!note.isRead && <span className={Notificationstyle.bullet}>‚óè</span>}
                </div>
              </div>
                <p className="mb-1 text-muted">{note.description1}</p>
                <p className="mb-1 text-muted">{note.description2}</p>
              </Col>
            </Row>  
          </div>
        ))}   
        </div>  
         {/* Load More Button */}
        {visibleCount [activeTab]< allnotifications.filter((note) => activeTab === "all" || note.category === activeTab).length && (
          <Row className="mt-3 text-center">
            <Col>
              <p 
                className={Notificationstyle.load} 
                onClick={loadMoreNotifications} 
                style={{ cursor: "pointer" }}>
                Load more notifications
              </p>
            </Col>
          </Row>
  )}
    </Container>
  );
}

export default Notifications;